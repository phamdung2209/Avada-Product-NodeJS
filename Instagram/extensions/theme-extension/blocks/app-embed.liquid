{% schema %}
{
    "name": "Instagram Feed",
    "target": "section",
    "javascript": "theme-app.js",
    "settings": [
        {
            "type": "text",
            "id": "numberColumns",
            "label": "Number of columns",
            "default": "3"
        },
        {
            "type": "text",
            "id": "spacing",
            "label": "Spacing",
            "default": "10"
        }
    ]
}
{% endschema %}

{% liquid
    assign setting = shop.metafields.instagram.setting.value
    assign media = shop.metafields.instagram.media.value

    assign number_columns = setting.numberColumns | default: 4
    assign spacing = setting.spacing | default: 10
    assign media_size = media | size
    assign quantity_rows = media_size | times: 1.0 | divided_by: number_columns | ceil
    assign rows_minus_one = quantity_rows | minus: 1
    assign total_spacing = spacing | times: rows_minus_one
    assign skeleton_width = 100.0 | divided_by: number_columns | ceil

    assign height_component = skeleton_width | times: quantity_rows | plus: total_spacing | plus: number_columns | plus: quantity_rows | plus: 5

    
%} 

<style>
    .ig-component {
        background-color: white;
        width: 100%;
        transition: all 0.3s ease-in-out;
        min-height: 200px;
        height: {{ height_component }}vh; 
    }
</style>

<div class="ig-component" id="ig-component">
    <div 
        style="display: grid; grid-template-columns: repeat({{ number_columns }}, 1fr); gap: {{ spacing }}px;"
    >
        {% for idx in (1..media_size) %}
            <div
                style="aspect-ratio: 1/1; border: 1px solid #f0f0f0; width: 100%; height: 100%;"
            ></div>
        {% endfor %}
    </div>
</div>

<script>

    document.addEventListener('DOMContentLoaded', async function() {

    var igComponent = document.getElementById('ig-component')
    const widthIgComponent = igComponent.offsetWidth

    const quantityRows = Math.ceil({{ media_size }} / {{ number_columns }})
        console.log('quantityRows', quantityRows)
    const widthSkeleton = (widthIgComponent - {{ spacing }} * ({{ number_columns }} - 1)) / {{ number_columns }}
        console.log('widthSkeleton', widthSkeleton)

    const heightIgComponent = widthSkeleton * quantityRows + {{ spacing }} * (quantityRows - 1)
        console.log('heightIgComponent', heightIgComponent, {{ spacing }})
 
    igComponent.style.maxHeight = `${heightIgComponent}px`
})

</script>